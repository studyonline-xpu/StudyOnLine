<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study_online.mapper.VideoMapper">
  <resultMap id="BaseResultMap" type="com.study_online.pojo.Video">
    <id column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="video_name" jdbcType="VARCHAR" property="videoName" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="clicks" jdbcType="BIGINT" property="clicks" />
    <result column="collections" jdbcType="BIGINT" property="collections" />
    <result column="likes" jdbcType="BIGINT" property="likes" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.study_online.pojo.Video">
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
    <result column="picture" jdbcType="LONGVARCHAR" property="picture" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    video_id, video_name, user_id, class_id, upload_time, update_time, price, clicks, 
    collections, likes
  </sql>
  <sql id="Blob_Column_List">
    note, picture
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.study_online.pojo.VideoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.study_online.pojo.VideoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video
    where video_id = #{videoId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from video
    where video_id = #{videoId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.study_online.pojo.VideoExample">
    delete from video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study_online.pojo.Video">
    insert into video (video_id, video_name, user_id, 
      class_id, upload_time, update_time, 
      price, clicks, collections, 
      likes, note, picture
      )
    values (#{videoId,jdbcType=VARCHAR}, #{videoName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{classId,jdbcType=VARCHAR}, #{uploadTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{price,jdbcType=DOUBLE}, #{clicks,jdbcType=BIGINT}, #{collections,jdbcType=BIGINT}, 
      #{likes,jdbcType=BIGINT}, #{note,jdbcType=LONGVARCHAR}, #{picture,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.study_online.pojo.Video">
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="videoId != null">
        video_id,
      </if>
      <if test="videoName != null">
        video_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="clicks != null">
        clicks,
      </if>
      <if test="collections != null">
        collections,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="picture != null">
        picture,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="videoId != null">
        #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="videoName != null">
        #{videoName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="clicks != null">
        #{clicks,jdbcType=BIGINT},
      </if>
      <if test="collections != null">
        #{collections,jdbcType=BIGINT},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=BIGINT},
      </if>
      <if test="note != null">
        #{note,jdbcType=LONGVARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study_online.pojo.VideoExample" resultType="java.lang.Long">
    select count(*) from video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update video
    <set>
      <if test="record.videoId != null">
        video_id = #{record.videoId,jdbcType=VARCHAR},
      </if>
      <if test="record.videoName != null">
        video_name = #{record.videoName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadTime != null">
        upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.clicks != null">
        clicks = #{record.clicks,jdbcType=BIGINT},
      </if>
      <if test="record.collections != null">
        collections = #{record.collections,jdbcType=BIGINT},
      </if>
      <if test="record.likes != null">
        likes = #{record.likes,jdbcType=BIGINT},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update video
    set video_id = #{record.videoId,jdbcType=VARCHAR},
      video_name = #{record.videoName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=DOUBLE},
      clicks = #{record.clicks,jdbcType=BIGINT},
      collections = #{record.collections,jdbcType=BIGINT},
      likes = #{record.likes,jdbcType=BIGINT},
      note = #{record.note,jdbcType=LONGVARCHAR},
      picture = #{record.picture,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update video
    set video_id = #{record.videoId,jdbcType=VARCHAR},
      video_name = #{record.videoName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=DOUBLE},
      clicks = #{record.clicks,jdbcType=BIGINT},
      collections = #{record.collections,jdbcType=BIGINT},
      likes = #{record.likes,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study_online.pojo.Video">
    update video
    <set>
      <if test="videoName != null">
        video_name = #{videoName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="clicks != null">
        clicks = #{clicks,jdbcType=BIGINT},
      </if>
      <if test="collections != null">
        collections = #{collections,jdbcType=BIGINT},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=BIGINT},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where video_id = #{videoId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.study_online.pojo.Video">
    update video
    set video_name = #{videoName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DOUBLE},
      clicks = #{clicks,jdbcType=BIGINT},
      collections = #{collections,jdbcType=BIGINT},
      likes = #{likes,jdbcType=BIGINT},
      note = #{note,jdbcType=LONGVARCHAR},
      picture = #{picture,jdbcType=LONGVARCHAR}
    where video_id = #{videoId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study_online.pojo.Video">
    update video
    set video_name = #{videoName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DOUBLE},
      clicks = #{clicks,jdbcType=BIGINT},
      collections = #{collections,jdbcType=BIGINT},
      likes = #{likes,jdbcType=BIGINT}
    where video_id = #{videoId,jdbcType=VARCHAR}
  </update>
<!--  自己添的方法-->
  <select id="queryVideoByClassId" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select * from video where video.class_id=#{classId} order by video.update_time desc
  </select>
  <!--查询热点视频-->
  <select id="queryHotVideo" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      SELECT * from video ORDER BY(clicks) DESC LIMIT #{begin},8
  </select>
  <!--查询历史视屏-->
  <select id="queryHistory" parameterType="java.lang.String" resultMap="BaseResultMap">
      SELECT video.* FROM video, history
      WHERE history.user_id = #{user_id}
      and history.video_id = video.video_id
      ORDER BY history.time desc
  </select>
</mapper>